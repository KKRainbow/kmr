// Code generated by protoc-gen-go.
// source: log.proto
// DO NOT EDIT!

/*
Package nilog is a generated protocol buffer package.

It is generated from these files:
	log.proto

It has these top-level messages:
	Log
	Logs
	Session
	Sessions
*/
package nilog

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Log struct {
	Action     string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	NiVersion  string `protobuf:"bytes,2,opt,name=niVersion" json:"niVersion,omitempty"`
	RemoteAddr string `protobuf:"bytes,3,opt,name=remoteAddr" json:"remoteAddr,omitempty"`
	QueryID    string `protobuf:"bytes,4,opt,name=queryID" json:"queryID,omitempty"`
	Query      string `protobuf:"bytes,5,opt,name=query" json:"query,omitempty"`
	DeviceID   string `protobuf:"bytes,6,opt,name=DeviceID" json:"DeviceID,omitempty"`
	Model      string `protobuf:"bytes,7,opt,name=Model" json:"Model,omitempty"`
	Timestamp  int64  `protobuf:"varint,8,opt,name=timestamp" json:"timestamp,omitempty"`
	KVs        []byte `protobuf:"bytes,9,opt,name=KVs,proto3" json:"KVs,omitempty"`
	Channel    string `protobuf:"bytes,10,opt,name=Channel" json:"Channel,omitempty"`
}

func (m *Log) Reset()                    { *m = Log{} }
func (m *Log) String() string            { return proto.CompactTextString(m) }
func (*Log) ProtoMessage()               {}
func (*Log) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Log) GetAction() string {
	if m != nil {
		return m.Action
	}
	return ""
}

func (m *Log) GetNiVersion() string {
	if m != nil {
		return m.NiVersion
	}
	return ""
}

func (m *Log) GetRemoteAddr() string {
	if m != nil {
		return m.RemoteAddr
	}
	return ""
}

func (m *Log) GetQueryID() string {
	if m != nil {
		return m.QueryID
	}
	return ""
}

func (m *Log) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

func (m *Log) GetDeviceID() string {
	if m != nil {
		return m.DeviceID
	}
	return ""
}

func (m *Log) GetModel() string {
	if m != nil {
		return m.Model
	}
	return ""
}

func (m *Log) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Log) GetKVs() []byte {
	if m != nil {
		return m.KVs
	}
	return nil
}

func (m *Log) GetChannel() string {
	if m != nil {
		return m.Channel
	}
	return ""
}

type Logs struct {
	Content []*Log `protobuf:"bytes,1,rep,name=content" json:"content,omitempty"`
}

func (m *Logs) Reset()                    { *m = Logs{} }
func (m *Logs) String() string            { return proto.CompactTextString(m) }
func (*Logs) ProtoMessage()               {}
func (*Logs) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Logs) GetContent() []*Log {
	if m != nil {
		return m.Content
	}
	return nil
}

type Session struct {
	Deviceid string `protobuf:"bytes,1,opt,name=deviceid" json:"deviceid,omitempty"`
	Logs     *Logs  `protobuf:"bytes,2,opt,name=logs" json:"logs,omitempty"`
}

func (m *Session) Reset()                    { *m = Session{} }
func (m *Session) String() string            { return proto.CompactTextString(m) }
func (*Session) ProtoMessage()               {}
func (*Session) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Session) GetDeviceid() string {
	if m != nil {
		return m.Deviceid
	}
	return ""
}

func (m *Session) GetLogs() *Logs {
	if m != nil {
		return m.Logs
	}
	return nil
}

type Sessions struct {
	Content []*Session `protobuf:"bytes,1,rep,name=content" json:"content,omitempty"`
}

func (m *Sessions) Reset()                    { *m = Sessions{} }
func (m *Sessions) String() string            { return proto.CompactTextString(m) }
func (*Sessions) ProtoMessage()               {}
func (*Sessions) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Sessions) GetContent() []*Session {
	if m != nil {
		return m.Content
	}
	return nil
}

func init() {
	proto.RegisterType((*Log)(nil), "nilog.Log")
	proto.RegisterType((*Logs)(nil), "nilog.Logs")
	proto.RegisterType((*Session)(nil), "nilog.Session")
	proto.RegisterType((*Sessions)(nil), "nilog.Sessions")
}

func init() { proto.RegisterFile("log.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 297 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x5c, 0x91, 0x51, 0x4b, 0xc3, 0x30,
	0x14, 0x85, 0xe9, 0xba, 0xad, 0xed, 0x9d, 0x88, 0x04, 0x91, 0x30, 0x44, 0x4b, 0xf1, 0xa1, 0x0f,
	0xb2, 0x87, 0xe9, 0x1f, 0x10, 0x8b, 0x30, 0xac, 0x2f, 0x15, 0xf6, 0x5e, 0xdb, 0x10, 0x03, 0x6d,
	0xee, 0x6c, 0xa2, 0xe0, 0x2f, 0xf0, 0x6f, 0x4b, 0x6f, 0xb3, 0x56, 0x7c, 0xcb, 0x39, 0x5f, 0x72,
	0xef, 0xe1, 0x04, 0xa2, 0x06, 0xe5, 0xe6, 0xd0, 0xa1, 0x45, 0xb6, 0xd0, 0xaa, 0x41, 0x99, 0xfc,
	0xcc, 0xc0, 0xcf, 0x51, 0xb2, 0x0b, 0x58, 0x96, 0x95, 0x55, 0xa8, 0xb9, 0x17, 0x7b, 0x69, 0x54,
	0x38, 0xc5, 0x2e, 0x21, 0xd2, 0x6a, 0x2f, 0x3a, 0xd3, 0xa3, 0x19, 0xa1, 0xc9, 0x60, 0x57, 0x00,
	0x9d, 0x68, 0xd1, 0x8a, 0x87, 0xba, 0xee, 0xb8, 0x4f, 0xf8, 0x8f, 0xc3, 0x38, 0x04, 0x1f, 0x9f,
	0xa2, 0xfb, 0xde, 0x65, 0x7c, 0x4e, 0xf0, 0x28, 0xd9, 0x39, 0x2c, 0xe8, 0xc8, 0x17, 0xe4, 0x0f,
	0x82, 0xad, 0x21, 0xcc, 0xc4, 0x97, 0xaa, 0xc4, 0x2e, 0xe3, 0x4b, 0x02, 0xa3, 0xee, 0x5f, 0xbc,
	0x60, 0x2d, 0x1a, 0x1e, 0x0c, 0x2f, 0x48, 0xf4, 0xf9, 0xac, 0x6a, 0x85, 0xb1, 0x65, 0x7b, 0xe0,
	0x61, 0xec, 0xa5, 0x7e, 0x31, 0x19, 0xec, 0x0c, 0xfc, 0xe7, 0xbd, 0xe1, 0x51, 0xec, 0xa5, 0x27,
	0x45, 0x7f, 0xec, 0x13, 0x3d, 0xbe, 0x97, 0x5a, 0x8b, 0x86, 0xc3, 0x90, 0xc8, 0xc9, 0xe4, 0x16,
	0xe6, 0x39, 0x4a, 0xc3, 0x6e, 0x20, 0xa8, 0x50, 0x5b, 0xa1, 0x2d, 0xf7, 0x62, 0x3f, 0x5d, 0x6d,
	0x61, 0x43, 0x55, 0x6d, 0x72, 0x94, 0xc5, 0x11, 0x25, 0x4f, 0x10, 0xbc, 0x0a, 0x43, 0x25, 0xac,
	0x21, 0xac, 0x29, 0xa4, 0xaa, 0x5d, 0x79, 0xa3, 0x66, 0xd7, 0x30, 0x6f, 0x50, 0x1a, 0x6a, 0x6e,
	0xb5, 0x5d, 0x4d, 0x93, 0x4c, 0x41, 0x20, 0xb9, 0x87, 0xd0, 0xcd, 0x31, 0x2c, 0xfd, 0xbf, 0xf9,
	0xd4, 0xdd, 0x77, 0x37, 0xc6, 0xed, 0x6f, 0x4b, 0xfa, 0xc3, 0xbb, 0xdf, 0x00, 0x00, 0x00, 0xff,
	0xff, 0xd7, 0xb1, 0x70, 0xc0, 0xd0, 0x01, 0x00, 0x00,
}
